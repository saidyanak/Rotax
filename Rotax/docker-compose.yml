services:
  auth:
    build: .
    ports:
      - "8080:8080"
    volumes:
      - ./src:/app/src
      - /app/target
      - ~/.m2:/root/.m2
      - ./uploads:/app/uploads
    env_file: .env
    networks:
      - webnet
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: postgres:16
    container_name: rotax_postgres
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    volumes:
      - rotax-db-data:/var/lib/postgresql/data
    networks:
      - webnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  rotax-db-data:

networks:
  webnet:
    driver: bridge